#!/usr/bin/bash
# =====================================================
# -----------------------------------------------------
# Script to put put a link of the current playing song
# into a playlist forlder using Rofi.
# To be used with Rofi-beats.
#     Created by: Jason Bradberry (2025)
# -----------------------------------------------------
# =====================================================

# Directory local music folder
pDIR="$HOME/Music/Playlists/"

# Directory for icons
iDIR="/usr/share/icons/BeautyLine/actions/scalable"

if [ "${UWSM_SESSION}" ]; then
  ROFI_CONFIG="$HOME/.config/rofi/config-wide.rasi"
else
  ROFI_CONFIG="$HOME/.config/rofi/launchers/type-1/style-6.rasi"
fi

# get current song
# song=$(playerctl -p mpv metadata xesam:url | sed 's|file://||')
nSONG=$(playerctl -p mpv metadata xesam:title 2>/dev/null)
nSONG=$(printf '%b' "${nSONG//%/\\x}")
pSONG=$(playerctl -p mpv metadata xesam:url 2>/dev/null)
pSONG=$(printf '%b' "${pSONG//%/\\x}")

# Check for empty URL
if [[ -z "$pSONG" ]]; then
  notify-send -i "$iDIR/music-playlist.svg" "No song is currently playing!" "Cannot add to playlist."
  exit 1
fi

# Check that the URL starts with 'file://'
if [[ "$pSONG" != file://* ]]; then
  notify-send -i "$iDIR/music-playlist.svg" "Not a local file!" "Current track is from the internet or an unsupported source."
  exit 1
fi

# Strip 'file://' prefix safely
pSONG=${pSONG#file://}

# Check if the local file actually exists
if [[ ! -f "$pSONG" ]]; then
  notify-send -i "$iDIR/music-playlist.svg" "File not found!" "Local file could not be accessed: $pSONG"
  exit 1
fi

# (optional) log success or continue your logic here
echo "Local song detected: $nSONG ($pSONG)"

# Generate the list (directories + management options)
sCHOICES=$(printf "üéµ New Playlist\nüóëÔ∏è Delete Playlist\n%s\n" \
  "$(find "$pDIR" -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | sort)")

# Show in rofi
sCHOICE=$(echo "$sCHOICES" | rofi -dmenu -config "$ROFI_CONFIG" -p "Manage Playlists:")

# Handle selection
case "$sCHOICE" in
"üéµ New Playlist")
  NEWNAME=$(rofi -dmenu -config "$ROFI_CONFIG" -p "Enter new playlist name:")
  if [[ -n "$NEWNAME" ]]; then
    mkdir -p "$pDIR/$NEWNAME"
    notify-send -i "$iDIR/music-playlist.svg" "Playlist created" "$NEWNAME"
  fi
  ;;
"üóëÔ∏è Delete Playlist")
  TODEL=$(find "$pDIR" -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | sort | rofi -dmenu -config "$ROFI_CONFIG" -p "Delete which playlist?")
  if [[ -n "$TODEL" ]]; then
    rm -rf "${pDIR:?}/${TODEL:?}"
    notify-send -i "$iDIR/music-playlist.svg" "Playlist deleted" "$TODEL"
  fi
  ;;
"")
  # user hit Escape
  exit 0
  ;;
*)
  # Otherwise, assume they picked an existing playlist ‚Äî add song
  # create symlink
  ln -s "$pSONG" "$pDIR/$sCHOICE/"
  ln -s "$pSONG" "$pDIR/favorites/"
  notify-send -i "$iDIR/music-playlist.svg" "Adding \"$nSONG\" to:" "$sCHOICE"
  ;;
esac
