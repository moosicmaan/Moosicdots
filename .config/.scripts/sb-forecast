#!/bin/sh
# =====================================================
# -----------------------------------------------------
# From: I cannot remember where I got this script from.
# Displays today's precipication chance (â˜”), and daily low (ðŸ¥¶) and high (ðŸŒž).
# Usually intended for the statusbar.
#     Modified by: Jason Bradberry (2024)
# -----------------------------------------------------
# =====================================================

url="${WTTRURL:-wttr.in}"
weatherreport="${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport"
# weatherreport="$HOME/.cache/weatherreport"

# Get a weather report from 'wttr.in' and save it locally.
# getforecast() { timeout --signal=1 2s curl -sf "$url/$LOCATION" > "$weatherreport" || exit 1; }
getforecast() { timeout --signal=1 2s curl -m 10 -sf "$url/Walsenburg" >"$weatherreport" || exit 1; }

# Forecast should be updated only once a day.
checkforecast() {
  # removing to ensure this always runs
  rm "$weatherreport"
  [ -s "$weatherreport" ] && [ "$(stat -c %y "$weatherreport" 2>/dev/null |
    cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ]
}

getprecipchance() {
  echo "$weatherdata" | sed '16q;d' | # Extract line 16 from file
    grep -wo "[0-9]*%" |              # Find a sequence of digits followed by '%'
    sort -rn |                        # Sort in descending order
    head -1q                          # Extract first line
}

getdailyhighlow() {
  echo "$weatherdata" | sed '13q;d' | # Extract line 13 from file
    grep -o "m\\([-+]\\)*[0-9]\\+" |  # Find temperatures in the format "m<signed number>"
    sed 's/[+m]//g' |                 # Remove '+' and 'm'
    sort -g |                         # Sort in ascending order
    sed -e 1b -e '$!d'                # Extract the first and last lines
}

readfile() { weatherdata="$(cat "$weatherreport")"; }

showweather() {
  readfile
  printf "â˜”%s ðŸ¥¶%sÂ° ðŸŒž%sÂ°\n" $(getprecipchance) $(getdailyhighlow)
  # corrected ?
  # printf "â˜”%s ðŸ¥¶%sÂ° ðŸŒž%sÂ°\n" "$(getprecipchance)" "$(getdailyhighlow)" "$(checkforecast)"
}

case $BLOCK_BUTTON in
# 1) setsid -f "$TERMINAL" -e sh less -Sf "$weatherreport" ;;
1)
  cat /home/moosicmaan/.cache/weatherreport >/tmp/debug_weather
  setsid -f kitty -T weatherreport sh -c "cat /tmp/debug_weather; echo 'ENTER to exit'; read"
  ;;
# 1)
#   cat /home/moosicmaan/.cache/weatherreport >/tmp/debug_weather
#   setsid -f kitty -T weatherreport sh -c "less -R /tmp/debug_weather"
#   ;;
2) checkforecast || getforecast && showweather ;;
3) notify-send "ðŸŒˆ Weather module" "\- Left click for full forecast.
- Middle click to update forecast.
â˜”: Chance of rain/snow
ðŸ¥¶: Daily low
ðŸŒž: Daily high" ;;
6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

checkforecast || getforecast

showweather
